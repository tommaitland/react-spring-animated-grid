{"version":3,"file":"index.modern.js","sources":["../src/defaults.ts","../src/GridComponent.tsx","../src/helpers.ts"],"sourcesContent":["export const defaultMarginTop = 0\nexport const defaultMarginRight = 0\nexport const defaultMarginBottom = 0\nexport const defaultMarginLeft = 0\n\nexport const defaultItemHeight = 40;\nexport const defaultItemWidth = 40;","import React, { \n  useState,\n  useRef,\n  useMemo,\n  MutableRefObject,\n  ReactElement,\n  PropsWithChildren,\n  CSSProperties,\n} from \"react\";\n// import { useMeasure } from \"react-use\";\nimport { animated, AnimatedValue, useTransition } from \"react-spring\";\nimport { useMeasure } from \"react-use\";\nimport { calculateLayout } from './helpers'\nimport {\n  defaultMarginTop,\n  defaultMarginRight,\n  defaultMarginBottom,\n  defaultMarginLeft,\n  defaultItemWidth,\n  defaultItemHeight,\n} from \"./defaults\";\nimport { Position } from \"./main\";\n\nexport interface GridProps{\n  children: ReactElement[],\n  style?: CSSProperties,\n  itemMarginTop?: number,\n  itemMarginRight?: number,\n  itemMarginBottom?: number,\n  itemMarginLeft?: number,\n}\n\nexport function GridComponent(props: GridProps) {\n  \n  const { \n    style: containerStyle,\n    children,\n    itemMarginTop = defaultMarginTop,\n    itemMarginRight = defaultMarginRight,\n    itemMarginBottom = defaultMarginBottom,\n    itemMarginLeft = defaultMarginLeft,\n  } = props\n\n  const [containerRefMeasure, {width: containerWidth, height: containerHeight}] = useMeasure<HTMLDivElement>()\n  \n  const positions: MutableRefObject<Position[]> = useRef<Position[]>(\n    new Array(children.length)\n  )\n  \n  const refMeasures = children.map(() => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [size, {width, height}] = useMeasure()\n    return {size, width, height}\n  })\n  \n  const gridItems = useMemo(() => {\n    calculateLayout(\n      children,\n      refMeasures,\n      itemMarginTop,\n      itemMarginRight,\n      itemMarginBottom,\n      itemMarginLeft,\n      containerWidth\n    ).forEach((e,i) => {\n      positions.current[i] = {\n        ...positions.current[i],\n        ...e\n      }\n    })\n    let gridItemsCalcs = children.map((item: ReactElement, i: number) => {\n      return {\n        ...item,\n        // FIXME -- how to force key to be non null value.\n        key: item.key || 0,\n        top: positions.current[i].top,\n        left: positions.current[i].left,\n        width: refMeasures[i].width\n      }\n    })\n    return gridItemsCalcs\n  }, [\n    // dependencies: container's width, \n    // and size of each contained element\n    containerWidth,\n    refMeasures,\n  ])\n\n\n\n  const transitions = useTransition(gridItems, el => el.key, {\n    from: ({ top, left }) => ({ top, left }),\n    enter: ({ top, left }) => ({ top, left }),\n    update: ({ top, left }) => ({ top, left }),\n    // TODO -- Include spring config \n    // see https://github.com/MikeMajara/react-spring-animated-grid/issues/2\n    // config: { mass: 5, tension: 500, friction: 200 },\n  })\n\n  return (\n    <div\n      style={{\n        ...containerStyle,\n        position: \"relative\",\n      }}\n      ref={containerRefMeasure}\n    >\n      { children?.length &&\n        transitions.map((el,i) => {\n          const {item, props: { top, left, width, ...rest }} = el;\n          return (\n          <animated.div\n            key={item.key}\n            style={{\n              position: \"absolute\",\n              height: refMeasures[i].height,\n              top: top?.interpolate(top => `${top}px`),\n              left: left?.interpolate(left => `${left}px`),\n              ...rest\n            }}\n          >\n            {\n              React.cloneElement(\n                children[i],\n                {\n                  ref: refMeasures[i].size\n                }\n              )\n            }\n          </animated.div>)\n        })}\n    </div>\n  );\n}\n","import { Position } from \"./main\"\nimport { AnimatedValue } from 'react-spring'\nimport {\n  defaultMarginRight,\n  defaultMarginLeft,\n  defaultMarginTop,\n  defaultMarginBottom,\n\n  defaultItemHeight,\n  defaultItemWidth\n} from './defaults'\n\nexport const calculateLayout = (\n  elements: React.ReactElement[],\n  refMeasures: any[],\n  marginTop: number,\n  marginRight: number,\n  marginBottom: number,\n  marginLeft: number,\n  containerWidth: number,\n): Position[] => {\n\n  // TODO -- what is the units policy gonna be? as of know this should not work.\n  // const containerWidth = typeof containerWidthRaw === \"string\"\n  //  ? parseInt(containerWidthRaw.replace(/[a-z]+$/, ''))\n  //  : containerWidthRaw\n\n  // let t0 = performance.now()\n  let currentRow = 0\n  let currentTopOffset = 0\n  let currentLeftOffset = 0\n  let spaceRemainingX = containerWidth;\n  let elHeights = [defaultItemHeight];\n  \n  const nextRow = () => {\n    currentRow += 1\n    currentTopOffset += marginTop + Math.max(...elHeights) + marginBottom\n    currentLeftOffset = 0\n    spaceRemainingX = containerWidth\n    \n    // reset item heights for a new row\n    elHeights = [defaultItemHeight];\n  }\n\n  const positions: Position[] = []\n  elements.forEach((e, i) => {\n    let elementWidth = refMeasures[i].width;\n    elHeights.push(refMeasures[i].height);\n\n    const necessarySpaceX = marginLeft + elementWidth + marginRight\n    if (\n      (spaceRemainingX <= necessarySpaceX && \n      containerWidth > necessarySpaceX) || \n      (necessarySpaceX >= containerWidth && i !== 0)\n    ){\n      nextRow()\n    }\n    positions.push({\n      row: currentRow,\n      top: currentTopOffset + marginTop,\n      left: currentLeftOffset + marginLeft\n    })\n    spaceRemainingX -= necessarySpaceX\n    currentLeftOffset += necessarySpaceX\n  })\n  return positions;\n  // let t1 = performance.now()\n  // console.log(`Call to calculateLayout took ${t1 - t0} milliseconds.`)\n}\n"],"names":["defaultMarginTop","defaultMarginRight","defaultMarginBottom","defaultMarginLeft","GridComponent","props","style","containerStyle","children","itemMarginTop","itemMarginRight","itemMarginBottom","itemMarginLeft","containerRefMeasure","width","containerWidth","useMeasure","positions","useRef","Array","length","refMeasures","map","size","height","gridItems","useMemo","elements","marginTop","marginRight","marginBottom","marginLeft","currentRow","currentTopOffset","currentLeftOffset","spaceRemainingX","elHeights","forEach","e","i","elementWidth","push","necessarySpaceX","Math","max","row","top","left","calculateLayout","current","item","key","transitions","useTransition","el","from","enter","update","React","position","ref","rest","animated","div","interpolate","cloneElement"],"mappings":"sWAAaA,EAAmB,EACnBC,EAAqB,EACrBC,EAAsB,EACtBC,EAAoB,WC6BjBC,EAAcC,GAE5B,MACEC,MAAOC,EADHC,SAEJA,EAFIC,cAGJA,EAAgBT,EAHZU,gBAIJA,EAAkBT,EAJdU,iBAKJA,EAAmBT,EALfU,eAMJA,EAAiBT,GACfE,GAEGQ,GAAsBC,MAAOC,IAA4CC,IAE1EC,EAA0CC,EAC9C,IAAIC,MAAMX,EAASY,SAGfC,EAAcb,EAASc,IAAI,KAE/B,MAAOC,GAAMT,MAACA,EAADU,OAAQA,IAAWR,IAChC,MAAO,CAACO,KAAAA,EAAMT,MAAAA,EAAOU,OAAAA,KAGjBC,EAAYC,EAAQ,KC3CG,EAC7BC,EACAN,EACAO,EACAC,EACAC,EACAC,EACAhB,KASA,IAAIiB,EAAa,EACbC,EAAmB,EACnBC,EAAoB,EACpBC,EAAkBpB,EAClBqB,EAAY,CF3Be,IE6B/B,MAUMnB,EAAwB,GAqB9B,OApBAU,EAASU,QAAQ,CAACC,EAAGC,KACnB,IAAIC,EAAenB,EAAYkB,GAAGzB,MAClCsB,EAAUK,KAAKpB,EAAYkB,GAAGf,QAE9B,MAAMkB,EAAkBX,EAAaS,EAAeX,GAEjDM,GAAmBO,GACpB3B,EAAiB2B,GAChBA,GAAmB3B,GAAwB,IAANwB,KAlBxCP,GAAc,EACdC,GAAoBL,EAAYe,KAAKC,OAAOR,GAAaN,EACzDI,EAAoB,EACpBC,EAAkBpB,EAGlBqB,EAAY,CFpCiB,KEoD7BnB,EAAUwB,KAAK,CACbI,IAAKb,EACLc,IAAKb,EAAmBL,EACxBmB,KAAMb,EAAoBH,IAE5BI,GAAmBO,EACnBR,GAAqBQ,IAEhBzB,GDTL+B,CACExC,EACAa,EACAZ,EACAC,EACAC,EACAC,EACAG,GACAsB,QAAQ,CAACC,EAAEC,KACXtB,EAAUgC,QAAQV,QACbtB,EAAUgC,QAAQV,GAClBD,KAGc9B,EAASc,IAAI,CAAC4B,EAAoBX,SAEhDW,GAEHC,IAAKD,EAAKC,KAAO,EACjBL,IAAK7B,EAAUgC,QAAQV,GAAGO,IAC1BC,KAAM9B,EAAUgC,QAAQV,GAAGQ,KAC3BjC,MAAOO,EAAYkB,GAAGzB,UAIzB,CAGDC,EACAM,IAKI+B,EAAcC,EAAc5B,EAAW6B,GAAMA,EAAGH,IAAK,CACzDI,KAAM,EAAGT,IAAAA,EAAKC,KAAAA,OAAcD,IAAAA,EAAKC,KAAAA,IACjCS,MAAO,EAAGV,IAAAA,EAAKC,KAAAA,OAAcD,IAAAA,EAAKC,KAAAA,IAClCU,OAAQ,EAAGX,IAAAA,EAAKC,KAAAA,OAAcD,IAAAA,EAAKC,KAAAA,MAMrC,OACEW,uBACEpD,WACKC,GACHoD,SAAU,aAEZC,IAAK/C,UAEHL,SAAAA,EAAUY,SACVgC,EAAY9B,IAAI,CAACgC,EAAGf,KAClB,MAAMW,KAACA,EAAM7C,OAAOyC,IAAEA,EAAFC,KAAOA,IAA0BO,EAAVO,qIAAUP,EAAxCjD,8BACb,OACAqD,gBAACI,EAASC,KACRZ,IAAKD,EAAKC,IACV7C,SACEqD,SAAU,WACVnC,OAAQH,EAAYkB,GAAGf,OACvBsB,UAAKA,SAAAA,EAAKkB,YAAYlB,MAAUA,OAChCC,WAAMA,SAAAA,EAAMiB,YAAYjB,MAAWA,QAChCc,IAIHH,EAAMO,aACJzD,EAAS+B,GACT,CACEqB,IAAKvC,EAAYkB,GAAGhB"}